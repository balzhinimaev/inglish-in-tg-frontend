import React from 'react';
import { LearningGoal } from '../utils/constants';

interface LearningGoalOption {
  value: LearningGoal;
  label: string;
  emoji: string;
  description?: string;
}

interface LearningGoalsSelectorProps {
  values: LearningGoal[];
  onChange: (values: LearningGoal[]) => void;
}

const learningGoalOptions: LearningGoalOption[] = [
  {
    value: 'work_career',
    label: '–î–ª—è —Ä–∞–±–æ—Ç—ã –∏ –∫–∞—Ä—å–µ—Ä—ã',
    emoji: 'üíº',
    description: '–ü–æ–≤—ã—à–µ–Ω–∏–µ, —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è, –¥–µ–ª–æ–≤–æ–µ –æ–±—â–µ–Ω–∏–µ'
  },
  {
    value: 'study_exams',
    label: '–î–ª—è —É—á—ë–±—ã / —ç–∫–∑–∞–º–µ–Ω–∞',
    emoji: 'üéì',
    description: 'IELTS, TOEFL –∏ –¥—Ä—É–≥–∏–µ —ç–∫–∑–∞–º–µ–Ω—ã'
  },
  {
    value: 'travel',
    label: '–î–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π',
    emoji: '‚úàÔ∏è',
    description: '–û–±—â–µ–Ω–∏–µ –≤ –ø–æ–µ–∑–¥–∫–∞—Ö –∏ –æ—Ç–ø—É—Å–∫–µ'
  },
  {
    value: 'communication',
    label: '–î–ª—è –æ–±—â–µ–Ω–∏—è —Å –ª—é–¥—å–º–∏',
    emoji: 'üí¨',
    description: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏, –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞, –¥—Ä—É–∂–±–∞'
  },
  {
    value: 'entertainment',
    label: '–î–ª—è —Ñ–∏–ª—å–º–æ–≤, –∏–≥—Ä –∏ —Ö–æ–±–±–∏',
    emoji: 'üéÆ',
    description: '–ü–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –±–µ–∑ —Å—É–±—Ç–∏—Ç—Ä–æ–≤'
  },
  {
    value: 'relocation',
    label: '–î–ª—è –ø–µ—Ä–µ–µ–∑–¥–∞ / –∂–∏–∑–Ω–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π',
    emoji: 'üè†',
    description: '–≠–º–∏–≥—Ä–∞—Ü–∏—è, —É—á—ë–±–∞ –∏–ª–∏ —Ä–∞–±–æ—Ç–∞ –∑–∞ —Ä—É–±–µ–∂–æ–º'
  },
  {
    value: 'curiosity',
    label: '–ü—Ä–æ—Å—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ',
    emoji: 'ü§î',
    description: '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫—Ä—É–≥–æ–∑–æ—Ä–∞'
  }
];

export const LearningGoalsSelector: React.FC<LearningGoalsSelectorProps> = ({
  values,
  onChange,
}) => {
  const handleToggle = (value: LearningGoal) => {
    if (values.includes(value)) {
      onChange(values.filter(v => v !== value));
    } else {
      onChange([...values, value]);
    }
  };

  return (
    <div className="space-y-3">
      {learningGoalOptions.map((option) => {
        const isSelected = values.includes(option.value);
        
        return (
          <button
            key={option.value}
            type="button"
            onClick={() => handleToggle(option.value)}
            className={`
              w-full p-4 rounded-xl border-2 transition-all duration-200 text-left
              ${
                isSelected
                  ? 'border-telegram-button bg-telegram-button/10 shadow-lg'
                  : 'border-telegram-secondary-bg hover:border-telegram-button/50 bg-telegram-secondary-bg'
              }
            `}
          >
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <span className="text-2xl" role="img" aria-label={option.label}>
                  {option.emoji}
                </span>
                <div className="flex-1">
                  <div className="font-medium text-telegram-text">
                    {option.label}
                  </div>
                  {option.description && (
                    <div className="text-sm text-telegram-hint">
                      {option.description}
                    </div>
                  )}
                </div>
              </div>
              <div
                className={`
                  w-5 h-5 rounded border-2 transition-colors duration-200 flex items-center justify-center
                  ${
                    isSelected
                      ? 'border-telegram-button bg-telegram-button'
                      : 'border-telegram-hint'
                  }
                `}
              >
                {isSelected && (
                  <svg 
                    className="w-3 h-3 text-white" 
                    fill="currentColor" 
                    viewBox="0 0 20 20"
                  >
                    <path 
                      fillRule="evenodd" 
                      d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" 
                      clipRule="evenodd" 
                    />
                  </svg>
                )}
              </div>
            </div>
          </button>
        );
      })}
    </div>
  );
};
